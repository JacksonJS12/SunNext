@model SunNext.Web.ViewModels.SolarAssets.AllSolarAssetsQueryModel
@using SunNext.Common.Enums
@using System.ComponentModel.DataAnnotations

@{
    ViewData["Title"] = "ðŸ”§ Solar Assets Administration";
    var previousPage = Model.CurrentPage - 1;
    var maxPage = (int)Math.Ceiling((double)Model.TotalSolarAssets / Model.SolarAssetsPerPage);
}

<div class="container-fluid py-5">
    <div class="text-center mb-4">
        <h2 class="fw-bold text-white">ðŸ”§ Admin Solar Assets</h2>
        <p class="text-muted">Search, sort, and manage all solar assets including deleted ones</p>
    </div>

    <form method="get" class="mb-4">
        <div class="row g-3 justify-content-between align-items-end">
            <div class="col-md-2">
                <label asp-for="InstallationDateFrom" class="form-label text-light small">From Date</label>
                <input asp-for="InstallationDateFrom"
                       type="date"
                       class="form-control bg-dark text-light border-secondary"/>
            </div>

            <div class="col-md-2">
                <label asp-for="InstallationDateTo" class="form-label text-light small">To Date</label>
                <input asp-for="InstallationDateTo"
                       type="date"
                       class="form-control bg-dark text-light border-secondary"/>
            </div>

            <div class="col-md-2">
                <label asp-for="SolarAssetSorting" class="form-label text-light small">Sort By</label>
                <select asp-for="SolarAssetSorting"
                        class="form-select bg-dark text-light border-secondary">
                    @foreach (var sortOption in Enum.GetValues<SolarAssetSorting>())
                    {
                        var sortName = sortOption.GetType()
                            .GetField(sortOption.ToString())
                            ?.GetCustomAttributes(typeof(DisplayAttribute), false)
                            .Cast<DisplayAttribute>()
                            .FirstOrDefault()
                            ?.Name ?? sortOption.ToString();

                        <option value="@((int)sortOption)" selected="@(Model.SolarAssetSorting == sortOption)">
                            @sortName
                        </option>
                    }

                </select>
            </div>
            <div class="col-md-4">
                <div class="input-group shadow-sm overflow-hidden">
                    <input type="text"
                           name="SearchString"
                           value="@Model.SearchString"
                           class="form-control border-0 px-4 py-2 bg-dark text-light"
                           placeholder="Search by name or location..."/>
                    <button type="submit" class="btn btn-outline-info px-4">
                        <i class="bi bi-search"></i>
                    </button>
                </div>
            </div>
            <div class="col-md-1">
                <label asp-for="SolarAssetsPerPage" class="form-label text-light small">Per Page</label>
                <select asp-for="SolarAssetsPerPage"
                        class="form-select bg-dark text-light border-secondary">
                    <option value="3">3</option>
                    <option value="6">6</option>
                    <option value="12">12</option>
                    <option value="24">24</option>
                </select>
            </div>
        </div>

        <input type="hidden" asp-for="CurrentPage"/>
    </form>

    <div class="glass-container p-3 rounded-4">
        @if (Model.SolarAssets.Any())
        {
            <div class="table-responsive">
                <table class="table table-dark table-hover align-middle">
                    <thead class="table-light text-dark">
                    <tr>
                        <th>Asset</th>
                        <th class="d-none d-sm-table-cell">Type</th>
                        <th>Status</th>
                        <th>Power</th>
                        <th class="d-none d-md-table-cell">Location</th>
                        <th class="d-none d-md-table-cell">Created</th>
                        <th class="text-end">Actions</th>
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var asset in Model.SolarAssets)
                    {
                        <tr class="@(asset.IsDeleted ? "table-danger" : "")">
                            <td>
                                <div class="d-flex align-items-center gap-3">
                                    <img src="@asset.ImageUrl" class="rounded" width="48" height="48" style="object-fit: cover;" alt="Asset image" />
                                    <div>
                                        <strong>@asset.Name</strong>
                                        @if (asset.IsDeleted)
                                        {
                                            <br /><small class="text-danger">DELETED</small>
                                        }
                                    </div>
                                </div>
                            </td>
                            <td class="d-none d-sm-table-cell">@asset.Type</td>
                            <td>
                                @if (asset.IsDeleted)
                                {
                                    <span class="badge bg-danger">Deleted</span>
                                }
                                else if (asset.IsOnline)
                                {
                                    <span class="badge bg-success">Normal</span>
                                }
                                else
                                {
                                    <span class="badge bg-secondary">Offline</span>
                                }
                            </td>
                            <td>@($"{asset.PowerKw:F2} kW")</td>
                            <td class="d-none d-md-table-cell">@asset.Location</td>
                            <td class="d-none d-md-table-cell">@asset.CreatedOn.ToString("yyyy-MM-dd HH:mm")</td>
                            <td class="text-end">
                                <div class="d-flex justify-content-end gap-2 flex-wrap">
                                    <a asp-action="Details" asp-route-id="@asset.Id" class="btn btn-sm btn-outline-primary rounded-pill">Details</a>
                                    <a asp-action="Edit" asp-route-id="@asset.Id" class="btn btn-sm btn-outline-warning rounded-pill">Edit</a>
                                    @if (asset.IsDeleted)
                                    {
                                        <button type="button" class="btn btn-sm btn-outline-success rounded-pill" data-bs-toggle="modal" data-bs-target="#undeleteModal" data-id="@asset.Id" data-name="@asset.Name">Restore</button>
                                    }
                                    else
                                    {
                                        <button type="button" class="btn btn-sm btn-outline-danger rounded-pill" data-bs-toggle="modal" data-bs-target="#deleteModal" data-id="@asset.Id" data-name="@asset.Name">Delete</button>
                                    }
                                </div>
                            </td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
            @if (maxPage > 1)
{
    <nav aria-label="Page navigation" class="mt-4">
        <ul class="pagination justify-content-center">
            <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                <a class="page-link bg-dark border-secondary text-light"
                   asp-action="@(User.IsInRole("Administrator") ? "AdminAll" : "All")"
                   asp-route-currentPage="@(Model.CurrentPage - 1)"
                   asp-route-SolarAssetsPerPage="@Model.SolarAssetsPerPage"
                   asp-route-SearchString="@Model.SearchString"
                   asp-route-InstallationDateFrom="@Model.InstallationDateFrom?.ToString("yyyy-MM-dd")"
                   asp-route-InstallationDateTo="@Model.InstallationDateTo?.ToString("yyyy-MM-dd")"
                   asp-route-SolarAssetSorting="@((int)Model.SolarAssetSorting)">
                    Previous
                </a>
            </li>

            @for (int i = 1; i <= maxPage; i++)
            {
                <li class="page-item @(Model.CurrentPage == i ? "active" : "")">
                    <a class="page-link @(Model.CurrentPage == i ? "bg-info border-info text-white" : "bg-dark border-secondary text-light")"
                       asp-action="@(User.IsInRole("Administrator") ? "AdminAll" : "All")"
                       asp-route-currentPage="@i"
                       asp-route-SolarAssetsPerPage="@Model.SolarAssetsPerPage"
                       asp-route-SearchString="@Model.SearchString"
                       asp-route-InstallationDateFrom="@Model.InstallationDateFrom?.ToString("yyyy-MM-dd")"
                       asp-route-InstallationDateTo="@Model.InstallationDateTo?.ToString("yyyy-MM-dd")"
                       asp-route-SolarAssetSorting="@((int)Model.SolarAssetSorting)">
                        @i
                    </a>
                </li>
            }

            <li class="page-item @(Model.CurrentPage == maxPage ? "disabled" : "")">
                <a class="page-link bg-dark border-secondary text-light"
                   asp-action="@(User.IsInRole("Administrator") ? "AdminAll" : "All")"
                   asp-route-currentPage="@(Model.CurrentPage + 1)"
                   asp-route-SolarAssetsPerPage="@Model.SolarAssetsPerPage"
                   asp-route-SearchString="@Model.SearchString"
                   asp-route-InstallationDateFrom="@Model.InstallationDateFrom?.ToString("yyyy-MM-dd")"
                   asp-route-InstallationDateTo="@Model.InstallationDateTo?.ToString("yyyy-MM-dd")"
                   asp-route-SolarAssetSorting="@((int)Model.SolarAssetSorting)">
                    Next
                </a>
            </li>
        </ul>
    </nav>
}
            <div class="text-center mt-3">
                <small class="text-muted">
                    Showing @((Model.CurrentPage - 1) * Model.SolarAssetsPerPage + 1) to @(Math.Min(Model.CurrentPage * Model.SolarAssetsPerPage, Model.TotalSolarAssets)) of @Model.TotalSolarAssets assets
                </small>
            </div>
        }
        else
        {
            <div class="text-center py-5">
                <i class="bi bi-search display-1 text-muted"></i>
                <h4 class="text-muted mt-3">No solar assets found</h4>
                <p class="text-muted">Try adjusting your filters or search query.</p>
            </div>
        }
    </div>
</div>


<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content bg-dark text-white border-0">
            <div class="modal-header border-0">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Deletion</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"
                        aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete <strong id="deleteAssetName"></strong>? 
                <p>You will make a hard delete (it will be gone from the Database without way back)</p>
            </div>
            <div class="modal-footer border-0">
                <form id="deleteForm" method="post">
                    <button type="submit" class="btn btn-danger">Yes, Delete</button>
                    <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>

                </form>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="undeleteModal" tabindex="-1" aria-labelledby="undeleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content bg-dark text-white border-0">
            <div class="modal-header border-0">
                <h5 class="modal-title" id="undeleteModalLabel">Confirm Restoration</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to restore asset <strong id="undeleteAssetName"></strong>?
            </div>
            <div class="modal-footer border-0">
                <form id="undeleteForm" method="post">
                    <button type="submit" class="btn btn-success">Yes, Restore</button>
                    <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        const deleteModal = document.getElementById('deleteModal');
        deleteModal.addEventListener('show.bs.modal', function (event) {
            const button = event.relatedTarget;
            const id = button.getAttribute('data-id');
            const name = button.getAttribute('data-name');
            document.getElementById('deleteAssetName').textContent = name;
            document.getElementById('deleteForm').action = `/SolarAsset/HardDelete/${id}`;
        });

        const undeleteModal = document.getElementById('undeleteModal');
        undeleteModal.addEventListener('show.bs.modal', function (event) {
            const button = event.relatedTarget;
            const id = button.getAttribute('data-id');
            const name = button.getAttribute('data-name');
            document.getElementById('undeleteAssetName').textContent = name;
            document.getElementById('undeleteForm').action = `/SolarAsset/UnDelete/${id}`;
        });
    </script>
}
